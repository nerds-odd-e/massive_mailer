plugins {
    id "org.gretty" version "2.3.1"
}

repositories {
    jcenter()
    mavenCentral()
}

ext {
    junit5Version = '5.3.0'
    seleniumVersion = '3.141.59'
    assertJVersion = "3.12.2"
    ciBuild = System.getenv('SNAP_CI')
}

apply plugin: 'java'
apply plugin: 'war'
apply from: "gradle/idea/idea.gradle"

group = 'com.odde'
version = '0.0.1-SNAPSHOT'
description = """snowball"""

sourceCompatibility = 1.8
targetCompatibility = 1.8
compileJava.options.encoding = 'UTF-8'
war.archiveBaseName = 'snowball'


configurations {
    cucumberRuntime {
        extendsFrom testImplementation
    }
}

gretty {
    contextPath = "/"
    httpPort = 8070
    integrationTestTask = "cucumber"
    if (project.gradle.startParameter.taskNames.any { e -> e.startsWith('cucumber') || e.startsWith('appBeforeIntegrationTest') }) {
        jvmArgs = ["-Dactive_env=test"]
        httpPort = 8060
    }
}

task cucumber {
    group "verification"
    dependsOn assemble, compileTestJava
    doLast {
        javaexec {
            main = "cucumber.api.cli.Main"
            classpath = configurations.cucumberRuntime + sourceSets.main.output + sourceSets.test.output
            args = ['--plugin', 'pretty', '--glue', 'cucumber.steps', '--tags', /*'@now and */'not @system and not @slow and not @developing', 'src/test/resources']
        }
    }
}


task cucumberNow {
    group "verification"
    dependsOn assemble, compileTestJava
    doLast {
        javaexec {
            main = "cucumber.api.cli.Main"
            classpath = configurations.cucumberRuntime + sourceSets.main.output + sourceSets.test.output
            args = ['--plugin', 'pretty', '--glue', 'cucumber.steps', '--tags', '@now', 'src/test/resources']
        }
    }
}


test {
    useJUnitPlatform()
}

dependencies {
    compileOnly 'org.projectlombok:lombok:1.18.8'
    annotationProcessor 'org.projectlombok:lombok:1.18.8'
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.9.9'
    compile group: 'javax.validation', name: 'validation-api', version: '2.0.1.Final'
    compile group: 'org.hibernate', name: 'hibernate-validator', version: '5.1.3.Final'
    compile group: 'javax.el', name: 'javax.el-api', version: '3.0.0'
    compile group: 'org.glassfish', name: 'javax.el', version: '3.0.0'
    compile group: 'com.sun.mail', name: 'javax.mail', version: '1.5.4'
    compile group: 'com.icegreen', name: 'greenmail', version: '1.4.1'
    compile 'org.mongodb:mongodb-driver-sync:3.10.1'
    compile group: 'javax.servlet', name: 'javax.servlet-api', version: '4.0.1'
    compile group: "com.google.maps", name: "google-maps-services", version: "0.2.4"

    testCompile("org.junit.jupiter:junit-jupiter-api:$junit5Version")
    testRuntime("org.junit.jupiter:junit-jupiter-engine:$junit5Version")
    testCompile group: 'junit', name: 'junit', version: '4.12'
    testRuntime("org.junit.vintage:junit-vintage-engine:$junit5Version")
    testCompile group: 'org.hamcrest', name: 'hamcrest-core', version: '1.3'
    testCompile group: 'org.hamcrest', name: 'hamcrest-library', version: '1.3'
    testCompile group: 'org.springframework', name: 'spring-mock', version: '2.0.8'
    testCompile group: 'org.springframework', name: 'spring-core', version: '2.0.8'
    testCompile group: 'org.mockito', name: 'mockito-core', version: '2.7.20'
    testCompile "org.assertj:assertj-core:$assertJVersion"


    testCompile "org.seleniumhq.selenium:selenium-api:$seleniumVersion"
    testCompile "org.seleniumhq.selenium:selenium-java:$seleniumVersion"
    testCompile "org.seleniumhq.selenium:selenium-server:$seleniumVersion"

    testImplementation "io.cucumber:cucumber-java:4.4.0"
}

apply from: "gradle/ci.gradle"
